#!/usr/bin/env python3
"""
Script para verificar que Flask puede iniciarse correctamente en el entorno local.
Ejecutar desde el directorio ra√≠z del proyecto.
"""

def main():
    print("üîç VERIFICACI√ìN: Flask + Imports + Librer√≠as")
    print("=" * 50)
    
    # Verificar Flask
    try:
        import flask
        print("‚úÖ Flask disponible")
    except ImportError:
        print("‚ùå Flask no encontrado")
        return
    
    # Verificar que se puede importar la app
    try:
        from myapp import create_app
        print("‚úÖ M√≥dulo myapp importable")
    except ImportError as e:
        print(f"‚ùå Error importando myapp: {e}")
        return
    
    # Verificar creaci√≥n de app
    try:
        app = create_app()
        print("‚úÖ App Flask creada correctamente")
        print("‚úÖ Blueprint reports registrado")
    except Exception as e:
        print(f"‚ùå Error creando app: {e}")
        return
    
    # Verificar librer√≠as opcionales
    print("\nüì¶ VERIFICANDO LIBRER√çAS OPCIONALES:")
    
    try:
        import xlsxwriter
        print("‚úÖ xlsxwriter disponible - Exportaci√≥n Excel funcionar√°")
    except ImportError:
        print("‚ö†Ô∏è  xlsxwriter no disponible - Instalar con: pip install xlsxwriter")
    
    try:
        import reportlab
        print("‚úÖ reportlab disponible - Generaci√≥n PDF funcionar√°")
    except ImportError:
        print("‚ö†Ô∏è  reportlab no disponible - Instalar con: pip install reportlab")
    
    # Verificar rutas de reports
    try:
        with app.app_context():
            from flask import url_for
            url_index = url_for('reports_bp.index')
            url_excel = url_for('reports_bp.exportar_facturas_excel')
            url_listado = url_for('reports_bp.listado_facturacion')
            print("\nüîó RUTAS REGISTRADAS:")
            print(f"‚úÖ {url_index}")
            print(f"‚úÖ {url_excel}")
            print(f"‚úÖ {url_listado}")
    except Exception as e:
        print(f"‚ùå Error con rutas: {e}")
        return
    
    print("\nüéâ ¬°VERIFICACI√ìN COMPLETADA!")
    print("Flask deber√≠a iniciarse correctamente con: flask run")
    print("\nSi faltan librer√≠as, inst√°lalas con:")
    print("pip install xlsxwriter reportlab")

if __name__ == "__main__":
    main()
